{"ast":null,"code":"import { defineStore } from 'pinia';\nimport supabase from '../supabase/index';\nexport default defineStore('user', {\n  state: () => ({\n    user: null,\n    errorMsg: ''\n  }),\n  actions: {\n    async fetchUser() {\n      const user = await supabase.auth.user();\n      this.user = user;\n    },\n\n    async signUp(email, password) {\n      const {\n        user,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) this.errorMsg = error.message;\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n\n    async signIn(email, password) {\n      const {\n        user,\n        error\n      } = await supabase.auth.signIn({\n        email,\n        password\n      });\n      if (error) this.errorMsg = error.message;\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n\n    async signOut() {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;else this.user = null;\n    }\n\n  },\n  persist: {\n    enabled: true,\n    strategies: [{\n      key: 'user',\n      storage: localStorage\n    }]\n  }\n});","map":{"version":3,"names":["defineStore","supabase","state","user","errorMsg","actions","fetchUser","auth","signUp","email","password","error","message","signIn","signOut","persist","enabled","strategies","key","storage","localStorage"],"sources":["/home/maria/maria/ironhack/apptodo/src/store/user.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport supabase from '../supabase/index';\n\nexport default defineStore('user', {\n  state: () => ({\n    user: null,\n    errorMsg: '',\n  }),\n\n  actions: {\n    async fetchUser() {\n      const user = await supabase.auth.user();\n      this.user = user;\n    },\n\n    async signUp(email, password) {\n      const { user, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n      if (error) this.errorMsg = error.message;\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n\n    async signIn(email, password) {\n      const { user, error } = await supabase.auth.signIn({\n        email,\n        password,\n      });\n      if (error) this.errorMsg = error.message;\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n\n    async signOut() {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      else this.user = null;\n    },\n  },\n  persist: {\n    enabled: true,\n    strategies: [\n      {\n        key: 'user',\n        storage: localStorage,\n      },\n    ],\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,eAAeD,WAAW,CAAC,MAAD,EAAS;EACjCE,KAAK,EAAE,OAAO;IACZC,IAAI,EAAE,IADM;IAEZC,QAAQ,EAAE;EAFE,CAAP,CAD0B;EAMjCC,OAAO,EAAE;IACP,MAAMC,SAAN,GAAkB;MAChB,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACM,IAAT,CAAcJ,IAAd,EAAnB;MACA,KAAKA,IAAL,GAAYA,IAAZ;IACD,CAJM;;IAMP,MAAMK,MAAN,CAAaC,KAAb,EAAoBC,QAApB,EAA8B;MAC5B,MAAM;QAAEP,IAAF;QAAQQ;MAAR,IAAkB,MAAMV,QAAQ,CAACM,IAAT,CAAcC,MAAd,CAAqB;QACjDC,KADiD;QAEjDC;MAFiD,CAArB,CAA9B;MAIA,IAAIC,KAAJ,EAAW,KAAKP,QAAL,GAAgBO,KAAK,CAACC,OAAtB;MACX,IAAID,KAAJ,EAAW,MAAMA,KAAN;MACX,IAAIR,IAAJ,EAAU,KAAKA,IAAL,GAAYA,IAAZ;IACX,CAdM;;IAgBP,MAAMU,MAAN,CAAaJ,KAAb,EAAoBC,QAApB,EAA8B;MAC5B,MAAM;QAAEP,IAAF;QAAQQ;MAAR,IAAkB,MAAMV,QAAQ,CAACM,IAAT,CAAcM,MAAd,CAAqB;QACjDJ,KADiD;QAEjDC;MAFiD,CAArB,CAA9B;MAIA,IAAIC,KAAJ,EAAW,KAAKP,QAAL,GAAgBO,KAAK,CAACC,OAAtB;MACX,IAAID,KAAJ,EAAW,MAAMA,KAAN;MACX,IAAIR,IAAJ,EAAU,KAAKA,IAAL,GAAYA,IAAZ;IACX,CAxBM;;IA0BP,MAAMW,OAAN,GAAgB;MACd,MAAM;QAAEH;MAAF,IAAY,MAAMV,QAAQ,CAACM,IAAT,CAAcO,OAAd,EAAxB;MACA,IAAIH,KAAJ,EAAW,MAAMA,KAAN,CAAX,KACK,KAAKR,IAAL,GAAY,IAAZ;IACN;;EA9BM,CANwB;EAsCjCY,OAAO,EAAE;IACPC,OAAO,EAAE,IADF;IAEPC,UAAU,EAAE,CACV;MACEC,GAAG,EAAE,MADP;MAEEC,OAAO,EAAEC;IAFX,CADU;EAFL;AAtCwB,CAAT,CAA1B"},"metadata":{},"sourceType":"module"}